;
; Sieve of Eratosthenes
;
; A Greek mathematician in the 3rd century BCE came up with this
; algorithm to test for prime numbers up to a given limit.
;
; https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes
;

mode "text"

; ask for the upper limit
upper = num(input("Upper limit:"))

; create a list to mark composite (non-prime) numbers
composite = []

; start at 2 (the first prime number)
i = 2

; count from i until we hit the upper limit
while i <= upper do
  ; the value i has not been marked as non-prime
  print "{i} is prime"

  ; count from i^2 to the upper limit in multiples of i
  ; (this marks all multiples of i as non-prime)
  for j = i^2 to upper by i do composite[j] = true

  ; skip over the current i because it's prime
  i = i + 1

  ; skip over everything that has been marked as composite
  while composite[i] do i = i + 1
end
