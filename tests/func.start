a = list(0,1,2,3)

print len(a)

begin len do
  return "blargh"
end

print len(a)

begin inner3 do
  print "    - inner3 `foo` should be 43"
  local foo = 99 ; makes a new foo
  print "    - inner3 `foo` should be 99"
end

begin inner2 do
  print "  - inner2 `foo` should be 42"
  let foo = foo + 1 ; refers to the foo in inner1
  print "  - inner2 `foo` should be 43"
  inner3
  print "  - inner2 `foo` should be 43"
end

begin inner1(foo) do ; implies local foo
  print "inner1 `foo` should be 42"
  inner2
  print "inner1 `foo` should be 43"
  let foo = foo + 1
  print "inner1 `foo` should be 44"
end

let foo = 123
print "outer `foo` should be 123"

inner1 42
print "outer `foo` should still be 123"

begin compare(first, second) do
  if first > second then
    return 1
  else if first < second then
    return -1
  else
    return 0
  end
end

for x from 8 to 13 do
  print "compare(`x`, 10) is `compare(x, 10)`"
end

begin func1(i) do
  while i < 60 do i = i * 2
  return i
end

begin func2(i) do
  j = i
  while j < func1(i) do j = j + 11
  return j
end

print "func2(10) = `func2(10)` = 87"
